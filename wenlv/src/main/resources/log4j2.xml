<?xml version="1.0" encoding="UTF-8" ?>
<!-- 该xml配置中,xml元素大小写不敏感 -->
<!-- status="off",log4j2把自身事件记录到控制台的配置，off表示不记录，其余的记录有trace，debug，info，warn，error，fatal -->
<!-- monitorInterval表示检测更改配置的时间,单位是秒,最小间隔为5秒,0或负数表示不检测 -->
<configuration name="test-cfg" status="off" monitorInterval="0">

    <!-- 常量引用 -->
    <properties>
        <property name="LOG_HOME">logs</property>
        <!--<property name="LOG_HOME">/home/zxin10/ccrizhi/log</property>-->
        <property name="FORMAT">[%t] %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level >>> %logger{36} - %msg%n</property>
    </properties>

    <!-- appender用于接收各种日志 -->
    <appenders>
        <!-- 常见的输出到console,常用于开发环境中,默认是system_err,还有一个system_out -->
        <!--这个输出控制台的配置，这里输出除了warn和error级别的信息到System.out -->
        <console name="console_debug" target="system_out">
            <!-- appender级别的日志过滤 -->
             <!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) . -->
            <thresholdFilter level="debug" onMatch="accept" onMismatch="deny"/>
            <patternLayout pattern="${FORMAT}" />
        </console>
        <!-- 常用于开发环境,把日志记录到文件中,默认追加 -->
        <!--<file name="file" fileName="${LOG_HOME}/tobservice.log" append="true">-->
            <!--<patternLayout pattern="${FORMAT}" />-->
        <!--</file>-->
        <!-- 这个输出控制台的配置，这里输出error级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
        <Console name="console_error" target="SYSTEM_ERR">
            <ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
            <PatternLayout pattern="${FORMAT}" />
        </Console>
        
        <!-- trace级别日志 ; 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出trace级别的数据到trace.log -->
        <RollingFile name="file_trace" immediateFlush="true"
            fileName="${LOG_HOME}/tobservice_trace.log" filePattern="${LOG_HOME}/trace/tobservice-trace-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>${FORMAT}</pattern>
            </PatternLayout>
            <Policies>
                <!-- 每个日志文件最大2MB -->
<!--                 <SizeBasedTriggeringPolicy size="10GB" /> -->
				<TimeBasedTriggeringPolicy interval="1"  modulate="true" />
            </Policies>
            <Filters>
                <!-- 此Filter意思是，只输出TRACE级别的数据 DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； 
                    ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
                <ThresholdFilter level="debug" onMatch="DENY" onMismatch="NEUTRAL" />
                <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
        </RollingFile>
        
        <!-- DEBUG级别日志 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出debug级别的数据到debug.log; -->
        <RollingFile name="file_debug" immediateFlush="true"
            fileName="${LOG_HOME}/tobservice-debug.log" filePattern="${LOG_HOME}/debug/tobservice-debug-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>${FORMAT}</pattern>
            </PatternLayout>
            <Policies><!-- 每个日志文件最大2MB ; -->
<!--                 <SizeBasedTriggeringPolicy size="5GB" /> -->
                <!-- 如果启用此配置，则日志会按文件名生成新压缩文件， 即如果filePattern配置的日期格式为 %d{yyyy-MM-dd HH} 
                    ，则每小时生成一个压缩文件， 如果filePattern配置的日期格式为 %d{yyyy-MM-dd} ，则天生成一个压缩文件 -->
                <TimeBasedTriggeringPolicy interval="1"  modulate="true" />
            </Policies>
            <Filters><!-- 此Filter意思是，只输出debug级别的数据 -->
            	<!-- 是否接受其他高于level的级别 -->
<!--                 <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL" /> -->
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="NEUTRAL" />
            </Filters>
        </RollingFile>
        
        <!-- INFO级别日志 -->
        <RollingFile name="file_info" immediateFlush="true"
            fileName="${LOG_HOME}/tobservice-info.log" filePattern="${LOG_HOME}/info/tobservice-info-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>${FORMAT}</pattern>
            </PatternLayout>
            <Policies>
<!--                 <SizeBasedTriggeringPolicy size="10GB" /> -->
                <TimeBasedTriggeringPolicy interval="1"  modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL" />
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
        </RollingFile>
        
        <!-- WARN级别日志 -->
        <RollingFile name="file_warn" immediateFlush="true"
            fileName="${LOG_HOME}/tobservice-warn.log" filePattern="${LOG_HOME}/warn/tobservice-warn-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>${FORMAT}</pattern>
            </PatternLayout>
            <Policies>
<!--                 <SizeBasedTriggeringPolicy size="2GB" /> -->
                <TimeBasedTriggeringPolicy interval="1"  modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL" />
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
        </RollingFile>
        <!-- ERROR级别日志 -->
        <RollingFile name="file_error" immediateFlush="true"
            fileName="${LOG_HOME}/tobservice-error.log" filePattern="${LOG_HOME}/error/tobservice-error-%d{yyyy-MM-dd}.log.gz">
            <PatternLayout>
                <pattern>${FORMAT}</pattern>
            </PatternLayout>
            <Policies>
<!--                 <SizeBasedTriggeringPolicy size="2GB" /> -->
                <TimeBasedTriggeringPolicy interval="1"  modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
            </Filters>
        </RollingFile>
    </appenders>



    <!-- 接收appender -->
    <loggers>
        <logger name="org.apache.http" level="DEBUG" />
        <!-- Spring -->
        <logger name="org.springframework" level="DEBUG" />
        <!-- mybatis loggers -->
        <logger name="com.ibatis" level="DEBUG" />
        <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="info" />
        <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
        <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
        <!-- sql loggers -->
        <logger name="java.sql.Connection" level="DEBUG"  additivity="true"/>
        <logger name="java.sql.Statement" level="DEBUG" additivity="true" />
        <logger name="java.sql.PreparedStatement" level="DEBUG"  additivity="true"/>
        <logger name="java.sql.ResultSet" level="DEBUG"  additivity="true"/>
        <!-- 对包进行更详细的配置 -->
        <!-- additivity表示是否追加,防止重复,因为root已经接收过一次了 -->
        <!--<logger name="cn.com.baseos" level="DEBUG" additivity="false">-->
            <!--<appender-ref ref="console" />-->
            <!--<appender-ref ref="file" />-->
        <!--</logger>-->
        <!-- root logger,一般用于放置所有的appender -->
        <root level="debug">
        	<appender-ref ref="console_error" />
            <appender-ref ref="console_debug" />
            <appender-ref ref="file_trace" />
            <appender-ref ref="file_debug" />
            <appender-ref ref="file_info" />
            <appender-ref ref="file_warn" />
            <appender-ref ref="file_error" />
            <!--<appender-ref ref="file" />-->
        </root>
    </loggers>

</configuration>